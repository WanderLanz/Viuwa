/// Closest 256 (8-bit) color to a given grayscale value. (0.25 KB)
/// thanks to [`ansi_colours`](https://crates.io/crates/ansi_colours)
#[rustfmt::skip]
pub static ANSI_GRAY: [u8; 256] = [
16,  16,  16,  16,  16, 232, 232, 232,
232, 232, 232, 232, 232, 232, 233, 233,
233, 233, 233, 233, 233, 233, 233, 233,
234, 234, 234, 234, 234, 234, 234, 234,
234, 234, 235, 235, 235, 235, 235, 235,
235, 235, 235, 235, 236, 236, 236, 236,
236, 236, 236, 236, 236, 236, 237, 237,
237, 237, 237, 237, 237, 237, 237, 237,
238, 238, 238, 238, 238, 238, 238, 238,
238, 238, 239, 239, 239, 239, 239, 239,
239, 239, 239, 239, 240, 240, 240, 240,
240, 240, 240, 240,  59,  59,  59,  59,
59,  241, 241, 241, 241, 241, 241, 241,
242, 242, 242, 242, 242, 242, 242, 242,
242, 242, 243, 243, 243, 243, 243, 243,
243, 243, 243, 244, 244, 244, 244, 244,
244, 244, 244, 244, 102, 102, 102, 102,
102, 245, 245, 245, 245, 245, 245, 246,
246, 246, 246, 246, 246, 246, 246, 246,
246, 247, 247, 247, 247, 247, 247, 247,
247, 247, 247, 248, 248, 248, 248, 248,
248, 248, 248, 248, 145, 145, 145, 145,
145, 249, 249, 249, 249, 249, 249, 250,
250, 250, 250, 250, 250, 250, 250, 250,
250, 251, 251, 251, 251, 251, 251, 251,
251, 251, 251, 252, 252, 252, 252, 252,
252, 252, 252, 252, 188, 188, 188, 188,
188, 253, 253, 253, 253, 253, 253, 254,
254, 254, 254, 254, 254, 254, 254, 254,
254, 255, 255, 255, 255, 255, 255, 255,
255, 255, 255, 255, 255, 255, 255, 231,
231, 231, 231, 231, 231, 231, 231, 231,
];

// use `itoa`?
const FMT_U8_ARRAY: [[u8; 3]; 256] = unsafe {
    ::core::mem::transmute(
        *b"000001002003004005006007008009010011012013014015\
016017018019020021022023024025026027028029030031\
032033034035036037038039040041042043044045046047\
048049050051052053054055056057058059060061062063\
064065066067068069070071072073074075076077078079\
080081082083084085086087088089090091092093094095\
096097098099100101102103104105106107108109110111\
112113114115116117118119120121122123124125126127\
128129130131132133134135136137138139140141142143\
144145146147148149150151152153154155156157158159\
160161162163164165166167168169170171172173174175\
176177178179180181182183184185186187188189190191\
192193194195196197198199200201202203204205206207\
208209210211212213214215216217218219220221222223\
224225226227228229230231232233234235236237238239\
240241242243244245246247248249250251252253254255",
    )
};

/// Static u8 format in base 10 lookup table. (0.75 KB).
///
/// Every u8 is formatted into a `[u8; 3]` array to minimize static size.
/// (`size_of_val([&[u8]; 256])` == 4 KB)
pub static FMT_U8: [[u8; 3]; 256] = FMT_U8_ARRAY;

/// 256 (8-bit) ANSI color palette as 24-bit RGB values. (0.75 KB)
#[rustfmt::skip]
pub static ANSI_PALETTE: [[u8; 3]; 256] = [
[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],
[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],
[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],
[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],[0x00, 0x00, 0x00],
// 6x6x6 cube, RGB = XYZ
[0x00,0x00,0x00], [0x00,0x00,0x5F], [0x00,0x00,0x87], [0x00,0x00,0xAF], [0x00,0x00,0xD7], [0x00,0x00,0xFF],
[0x00,0x5F,0x00], [0x00,0x5F,0x5F], [0x00,0x5F,0x87], [0x00,0x5F,0xAF], [0x00,0x5F,0xD7], [0x00,0x5F,0xFF],
[0x00,0x87,0x00], [0x00,0x87,0x5F], [0x00,0x87,0x87], [0x00,0x87,0xAF], [0x00,0x87,0xD7], [0x00,0x87,0xFF],
[0x00,0xAF,0x00], [0x00,0xAF,0x5F], [0x00,0xAF,0x87], [0x00,0xAF,0xAF], [0x00,0xAF,0xD7], [0x00,0xAF,0xFF],
[0x00,0xD7,0x00], [0x00,0xD7,0x5F], [0x00,0xD7,0x87], [0x00,0xD7,0xAF], [0x00,0xD7,0xD7], [0x00,0xD7,0xFF],
[0x00,0xFF,0x00], [0x00,0xFF,0x5F], [0x00,0xFF,0x87], [0x00,0xFF,0xAF], [0x00,0xFF,0xD7], [0x00,0xFF,0xFF],
[0x5F,0x00,0x00], [0x5F,0x00,0x5F], [0x5F,0x00,0x87], [0x5F,0x00,0xAF], [0x5F,0x00,0xD7], [0x5F,0x00,0xFF],
[0x5F,0x5F,0x00], [0x5F,0x5F,0x5F], [0x5F,0x5F,0x87], [0x5F,0x5F,0xAF], [0x5F,0x5F,0xD7], [0x5F,0x5F,0xFF],
[0x5F,0x87,0x00], [0x5F,0x87,0x5F], [0x5F,0x87,0x87], [0x5F,0x87,0xAF], [0x5F,0x87,0xD7], [0x5F,0x87,0xFF],
[0x5F,0xAF,0x00], [0x5F,0xAF,0x5F], [0x5F,0xAF,0x87], [0x5F,0xAF,0xAF], [0x5F,0xAF,0xD7], [0x5F,0xAF,0xFF],
[0x5F,0xD7,0x00], [0x5F,0xD7,0x5F], [0x5F,0xD7,0x87], [0x5F,0xD7,0xAF], [0x5F,0xD7,0xD7], [0x5F,0xD7,0xFF],
[0x5F,0xFF,0x00], [0x5F,0xFF,0x5F], [0x5F,0xFF,0x87], [0x5F,0xFF,0xAF], [0x5F,0xFF,0xD7], [0x5F,0xFF,0xFF],
[0x87,0x00,0x00], [0x87,0x00,0x5F], [0x87,0x00,0x87], [0x87,0x00,0xAF], [0x87,0x00,0xD7], [0x87,0x00,0xFF],
[0x87,0x5F,0x00], [0x87,0x5F,0x5F], [0x87,0x5F,0x87], [0x87,0x5F,0xAF], [0x87,0x5F,0xD7], [0x87,0x5F,0xFF],
[0x87,0x87,0x00], [0x87,0x87,0x5F], [0x87,0x87,0x87], [0x87,0x87,0xAF], [0x87,0x87,0xD7], [0x87,0x87,0xFF],
[0x87,0xAF,0x00], [0x87,0xAF,0x5F], [0x87,0xAF,0x87], [0x87,0xAF,0xAF], [0x87,0xAF,0xD7], [0x87,0xAF,0xFF],
[0x87,0xD7,0x00], [0x87,0xD7,0x5F], [0x87,0xD7,0x87], [0x87,0xD7,0xAF], [0x87,0xD7,0xD7], [0x87,0xD7,0xFF],
[0x87,0xFF,0x00], [0x87,0xFF,0x5F], [0x87,0xFF,0x87], [0x87,0xFF,0xAF], [0x87,0xFF,0xD7], [0x87,0xFF,0xFF],
[0xAF,0x00,0x00], [0xAF,0x00,0x5F], [0xAF,0x00,0x87], [0xAF,0x00,0xAF], [0xAF,0x00,0xD7], [0xAF,0x00,0xFF],
[0xAF,0x5F,0x00], [0xAF,0x5F,0x5F], [0xAF,0x5F,0x87], [0xAF,0x5F,0xAF], [0xAF,0x5F,0xD7], [0xAF,0x5F,0xFF],
[0xAF,0x87,0x00], [0xAF,0x87,0x5F], [0xAF,0x87,0x87], [0xAF,0x87,0xAF], [0xAF,0x87,0xD7], [0xAF,0x87,0xFF],
[0xAF,0xAF,0x00], [0xAF,0xAF,0x5F], [0xAF,0xAF,0x87], [0xAF,0xAF,0xAF], [0xAF,0xAF,0xD7], [0xAF,0xAF,0xFF],
[0xAF,0xD7,0x00], [0xAF,0xD7,0x5F], [0xAF,0xD7,0x87], [0xAF,0xD7,0xAF], [0xAF,0xD7,0xD7], [0xAF,0xD7,0xFF],
[0xAF,0xFF,0x00], [0xAF,0xFF,0x5F], [0xAF,0xFF,0x87], [0xAF,0xFF,0xAF], [0xAF,0xFF,0xD7], [0xAF,0xFF,0xFF],
[0xD7,0x00,0x00], [0xD7,0x00,0x5F], [0xD7,0x00,0x87], [0xD7,0x00,0xAF], [0xD7,0x00,0xD7], [0xD7,0x00,0xFF],
[0xD7,0x5F,0x00], [0xD7,0x5F,0x5F], [0xD7,0x5F,0x87], [0xD7,0x5F,0xAF], [0xD7,0x5F,0xD7], [0xD7,0x5F,0xFF],
[0xD7,0x87,0x00], [0xD7,0x87,0x5F], [0xD7,0x87,0x87], [0xD7,0x87,0xAF], [0xD7,0x87,0xD7], [0xD7,0x87,0xFF],
[0xD7,0xAF,0x00], [0xD7,0xAF,0x5F], [0xD7,0xAF,0x87], [0xD7,0xAF,0xAF], [0xD7,0xAF,0xD7], [0xD7,0xAF,0xFF],
[0xD7,0xD7,0x00], [0xD7,0xD7,0x5F], [0xD7,0xD7,0x87], [0xD7,0xD7,0xAF], [0xD7,0xD7,0xD7], [0xD7,0xD7,0xFF],
[0xD7,0xFF,0x00], [0xD7,0xFF,0x5F], [0xD7,0xFF,0x87], [0xD7,0xFF,0xAF], [0xD7,0xFF,0xD7], [0xD7,0xFF,0xFF],
[0xFF,0x00,0x00], [0xFF,0x00,0x5F], [0xFF,0x00,0x87], [0xFF,0x00,0xAF], [0xFF,0x00,0xD7], [0xFF,0x00,0xFF],
[0xFF,0x5F,0x00], [0xFF,0x5F,0x5F], [0xFF,0x5F,0x87], [0xFF,0x5F,0xAF], [0xFF,0x5F,0xD7], [0xFF,0x5F,0xFF],
[0xFF,0x87,0x00], [0xFF,0x87,0x5F], [0xFF,0x87,0x87], [0xFF,0x87,0xAF], [0xFF,0x87,0xD7], [0xFF,0x87,0xFF],
[0xFF,0xAF,0x00], [0xFF,0xAF,0x5F], [0xFF,0xAF,0x87], [0xFF,0xAF,0xAF], [0xFF,0xAF,0xD7], [0xFF,0xAF,0xFF],
[0xFF,0xD7,0x00], [0xFF,0xD7,0x5F], [0xFF,0xD7,0x87], [0xFF,0xD7,0xAF], [0xFF,0xD7,0xD7], [0xFF,0xD7,0xFF],
[0xFF,0xFF,0x00], [0xFF,0xFF,0x5F], [0xFF,0xFF,0x87], [0xFF,0xFF,0xAF], [0xFF,0xFF,0xD7], [0xFF,0xFF,0xFF],
// extra grayscale
[0x08,0x08,0x08], [0x12,0x12,0x12], [0x1C,0x1C,0x1C], [0x26,0x26,0x26], [0x30,0x30,0x30], [0x3A,0x3A,0x3A],
[0x44,0x44,0x44], [0x4E,0x4E,0x4E], [0x58,0x58,0x58], [0x62,0x62,0x62], [0x6C,0x6C,0x6C], [0x76,0x76,0x76],
[0x80,0x80,0x80], [0x8A,0x8A,0x8A], [0x94,0x94,0x94], [0x9E,0x9E,0x9E], [0xA8,0xA8,0xA8], [0xB2,0xB2,0xB2],
[0xBC,0xBC,0xBC], [0xC6,0xC6,0xC6], [0xD0,0xD0,0xD0], [0xDA,0xDA,0xDA], [0xE4,0xE4,0xE4], [0xEE,0xEE,0xEE],
];
